# Test Plan for Communication Event API with History Logging

| Test Description | Method | Path | JWT Bearer | Body Payload | Expected Result |
|------------------|--------|------|------------|--------------|-----------------|
| Create communication event with valid data | POST | /communication_events/ | Valid JWT (user_id=1, role=person_user) | `{"title": "Meeting Request", "detail": "Please join the meeting", "to_user_id": 2, "contact_mechanism_type_id": 1, "communication_event_status_type_id": 1}` | Status 200, returns `CommunicationEventOut` with `from_user_id=1`, history logged in `communication_event_history` with action="create" |
| Create communication event with invalid to_user_id | POST | /communication_events/ | Valid JWT (user_id=1, role=person_user) | `{"title": "Meeting Request", "detail": "Please join the meeting", "to_user_id": 999, "contact_mechanism_type_id": 1, "communication_event_status_type_id": 1}` | Status 400, error message "Invalid data or referenced IDs not found", no history logged |
| Create communication event without authentication | POST | /communication_events/ | None | `{"title": "Meeting Request", "detail": "Please join the meeting", "to_user_id": 2, "contact_mechanism_type_id": 1, "communication_event_status_type_id": 1}` | Status 401, unauthorized error, no history logged |
| Get communication event as sender | GET | /communication_events/1 | Valid JWT (user_id=1, role=person_user) | None | Status 200, returns `CommunicationEventOut` with id=1, no history logged |
| Get communication event as recipient | GET | /communication_events/1 | Valid JWT (user_id=2, role=person_user) | None | Status 200, returns `CommunicationEventOut` with id=1, no history logged |
| Get communication event as unauthorized user | GET | /communication_events/1 | Valid JWT (user_id=3, role=person_user) | None | Status 403, error message "Access restricted to sender or recipient", no history logged |
| Get non-existent communication event | GET | /communication_events/999 | Valid JWT (user_id=1, role=person_user) | None | Status 404, error message "Communication event not found", no history logged |
| List communication events for user | GET | /communication_events/ | Valid JWT (user_id=1, role=person_user) | None | Status 200, returns list of `CommunicationEventOut` where user_id=1 is sender or recipient, no history logged |
| List communication events for user with no events | GET | /communication_events/ | Valid JWT (user_id=3, role=person_user) | None | Status 200, returns empty list, no history logged |
| List communication events without authentication | GET | /communication_events/ | None | None | Status 401, unauthorized error, no history logged |
| Update communication event as sender | PUT | /communication_events/1 | Valid JWT (user_id=1, role=person_user) | `{"title": "Updated Meeting", "detail": "Updated details"}` | Status 200, returns updated `CommunicationEventOut`, history logged in `communication_event_history` with action="update" |
| Update communication event as recipient | PUT | /communication_events/1 | Valid JWT (user_id=2, role=person_user) | `{"communication_event_status_type_id": 2}` | Status 200, returns updated `CommunicationEventOut`, history logged in `communication_event_history` with action="update" |
| Update communication event as unauthorized user | PUT | /communication_events/1 | Valid JWT (user_id=3, role=person_user) | `{"title": "Updated Meeting"}` | Status 403, error message "Access restricted to sender or recipient", no history logged |
| Update non-existent communication event | PUT | /communication_events/999 | Valid JWT (user_id=1, role=person_user) | `{"title": "Updated Meeting"}` | Status 404, error message "Communication event not found", no history logged |
| Update communication event with invalid data | PUT | /communication_events/1 | Valid JWT (user_id=1, role=person_user) | `{"contact_mechanism_type_id": 999}` | Status 400, error message "Invalid data or referenced IDs not found", no history logged |
| Delete communication event as sender | DELETE | /communication_events/1 | Valid JWT (user_id=1, role=person_user) | None | Status 200, returns message "Communication event deleted", history logged in `communication_event_history` with action="delete" |
| Delete communication event as recipient | DELETE | /communication_events/1 | Valid JWT (user_id=2, role=person_user) | None | Status 200, returns message "Communication event deleted", history logged in `communication_event_history` with action="delete" |
| Delete communication event as unauthorized user | DELETE | /communication_events/1 | Valid JWT (user_id=3, role=person_user) | None | Status 403, error message "Access restricted to sender or recipient", no history logged |
| Delete non-existent communication event | DELETE | /communication_events/999 | Valid JWT (user_id=1, role=person_user) | None | Status 404, error message "Communication event not found", no history logged |